version: '3'

services:
  postgres:
    container_name: corp_portal_postgres
    image: postgres:12.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=corp-portal-core
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./initSchema.sql:/docker-entrypoint-initdb.d/initSchema.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: shevelvandrey/corp-portal-config:latest
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: shevelvandrey/corp-portal-eureka:latest
    ports:
      - "8070:8070"
    depends_on:
      postgres:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  core:
    image: shevelvandrey/corp-portal-core:latest
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      postgres:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
networks:
  backend:
    driver: bridge
